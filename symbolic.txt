   base3,        base2, dist
    1000,        11011,   41
    1112,       101001,   40
    1011,        11111,   39
    1202,       101111,   38
    2122,      1000111,   37
   10222,      1101011,   36
   12222,     10100001,   35
   11111,      1111001,   34
   10101,      1011011,   33
   12002,     10001001,   32
   10211,      1100111,   31
   12202,     10011011,   30
   22122,     11101001,   29
   20111,     10101111,   28
  100202,    100000111,   27
  112122,    110001011,   26
  210222,   1001010001,   25
  121111,    110111101,   24
   20012,     10100111,   23
  100022,     11111011,   22
  111222,    101111001,   21
  101111,    100011011,   20
  120202,    110101001,   19
  102211,    100111111,   18
  122202,    111011111,   17
  222122,   1011001111,   16
 1110222,  10000110111,   15
 2012222,  11001010011,   14
10022222, 100101111101,   13
 1020202,   1110001111,   12
 1212122,  10101010111,   11
 2210222, 100000000011,   10
11012222, 110000000101,    9
  210101,   1001000001,    8
  121001,    110110001,    7
  110001,    101000101,    6
    2021,       111101,    5
    0212,        10111,    4
    1022,       100011,    3
    1222,       110101,    2
      12,          101,    1
       1,            1,    0



       101
      0100
       111
      0111
     00011
     10101
    010000
     11100
     01101
    000100
     10011
    001101
    110100
    010111
   0000011
   1000101
  00101000
   1011110
    010011
    111101
   0111100
   0001101
   1010100
   0011111
   1101111
  01100111
 000011011
 100101001
0010111110
  11000111
 010101011
0000000001
1000000010
  00100000
   1011000
   0100010
      1110
       011
      0001
      1010
         0


The notes mention stripping MSB and LSB from the odd-to-odd orbit iterates to generate bitstring to represent state. I have done so here, for the orbit of 27. This is the symbolic progression associated with the orbit.

101
0100
111
0111
00011
10101
010000
11100
01101
000100
10011
001101
110100
010111
0000011
1000101
00101000
1011110
010011
111101
0111100
0001101
1010100
0011111
1101111
01100111
000011011
100101001
0010111110
11000111
010101011
0000000001
1000000010
00100000
1011000
0100010
1110
011
0001
1010
0

Same sequence, aligned the other way.

       101
      0100
       111
      0111
     00011
     10101
    010000
     11100
     01101
    000100
     10011
    001101
    110100
    010111
   0000011
   1000101
  00101000
   1011110
    010011
    111101
   0111100
   0001101
   1010100
   0011111
   1101111
  01100111
 000011011
 100101001
0010111110
  11000111
 010101011
0000000001
1000000010
  00100000
   1011000
   0100010
      1110
       011
      0001
      1010
         0


See any patterns? We're looking at something cycling radicals, but not quite in natural order, because 3n is permuting every step and hopping the cursor.

These are clearly not random binary numbers, they tend to contain long runs and sparse sequences. Which is weird, because that suggests inefficient encoding, and if this thing it's anything, it's efficient. Look at this grouping pattern. I believe the multiplicity of 0s and 1s in a run is significant. It reminds me of the way Minsky encodes carries as long runs of repeating sequences feeding back. This may not be one symbolic word, but a self-delimiting series of subsymbols of some kind.

Remember both 0 and 1 have meaning, they are just symbols now, not bits.

I note the sequences taper at both ends, it looks like n wanders into the wrong neighborhood and takes a while to find its way back out. 

Note short symbols 101 and 111 are at the start of the orbit, 011 is almost at the end of the orbit. 0100 and 0111 have a long way to go, but 1110, 0001, 1010 end the orbit.

These strings map 1:1 to integers and therefore odd core fingerprints. Be sensitive to correlations between *neighbor* valuations and payload bits.

What can you make of this?







The notes mention stripping MSB and LSB from the odd-to-odd orbit iterates to generate bitstring to represent state. I have done so here, for the orbit of 27. This is the symbolic progression associated with the orbit.

101
0100
111
0111
00011
10101
010000
11100
01101
000100
10011
001101
110100
010111
0000011
1000101
00101000
1011110
010011
111101
0111100
0001101
1010100
0011111
1101111
01100111
000011011
100101001
0010111110
11000111
010101011
0000000001
1000000010
00100000
1011000
0100010
1110
011
0001
1010
0


Here is the payload symbol, with zeros as dashes to make patterns stand out.
The ternary representation was not stripped in any way, but I replaced digits 0, 1, 2 with other characters, again for pattern recognition.
Both symbols have a corresponding mirrored version, which changes vertical alignment.

   n,   dist,       base3 , base3left  ,        symbol , symbolleft   
  27,     41,        |--- , |---       ,           O-O , ---|
  41,     40,        |||O , |||O       ,          -O-- , O|||
  31,     39,        |-|| , |-||       ,           OOO , ||-|
  47,     38,        |O-O , |O-O       ,          -OOO , O-O|
  71,     37,        O|OO , O|OO       ,         ---OO , O|OO
 107,     36,       |-OOO , |-OOO      ,         O-O-O , OOO-|
 161,     35,       |OOOO , |OOOO      ,        -O---- , OOOO|
 121,     34,       ||||| , |||||      ,         OOO-- , |||||
  91,     33,       |-|-| , |-|-|      ,         -OO-O , |-|-|
 137,     32,       |O--O , |O--O      ,        ---O-- , O--O|
 103,     31,       |-O|| , |-O||      ,         O--OO , ||O-|
 155,     30,       |OO-O , |OO-O      ,        --OO-O , O-OO|
 233,     29,       OO|OO , OO|OO      ,        OO-O-- , OO|OO
 175,     28,       O-||| , O-|||      ,        -O-OOO , |||-O
 263,     27,      |--O-O , |--O-O     ,       -----OO , O-O--|
 395,     26,      ||O|OO , ||O|OO     ,       O---O-O , OO|O||
 593,     25,      O|-OOO , O|-OOO     ,      --O-O--- , OOO-|O
 445,     24,      |O|||| , |O||||     ,       O-OOOO- , ||||O|
 167,     23,       O--|O , O--|O      ,        -O--OO , O|--O
 251,     22,      |---OO , |---OO     ,        OOOO-O , OO---|
 377,     21,      |||OOO , |||OOO     ,       -OOOO-- , OOO|||
 283,     20,      |-|||| , |-||||     ,       ---OO-O , ||||-|
 425,     19,      |O-O-O , |O-O-O     ,       O-O-O-- , O-O-O|
 319,     18,      |-OO|| , |-OO||     ,       --OOOOO , ||OO-|
 479,     17,      |OOO-O , |OOO-O     ,       OO-OOOO , O-OOO|
 719,     16,      OOO|OO , OOO|OO     ,      -OO--OOO , OO|OOO
1079,     15,     |||-OOO , |||-OOO    ,     ----OO-OO , OOO-|||
1619,     14,     O-|OOOO , O-|OOOO    ,     O--O-O--O , OOOO|-O
2429,     13,    |--OOOOO , |--OOOOO   ,    --O-OOOOO- , OOOOO--|
 911,     12,     |-O-O-O , |-O-O-O    ,      OO---OOO , O-O-O-|
1367,     11,     |O|O|OO , |O|O|OO    ,     -O-O-O-OO , OO|O|O|
2051,     10,     OO|-OOO , OO|-OOO    ,    ---------O , OOO-|OO
3077,      9,    ||-|OOOO , ||-|OOOO   ,    O-------O- , OOOO|-||
 577,      8,      O|-|-| , O|-|-|     ,      --O----- , |-|-|O
 433,      7,      |O|--| , |O|--|     ,       O-OO--- , |--|O|
 325,      6,      ||---| , ||---|     ,       -O---O- , |---||
  61,      5,        O-O| , O-O|       ,          OOO- , |O-O
  23,      4,        -O|O , -O|O       ,           -OO , O|O-
  35,      3,        |-OO , |-OO       ,          ---O , OO-|
  53,      2,        |OOO , |OOO       ,          O-O- , OOO|
   5,      1,          |O , |O         ,             - , O|
   1,      0,           | , |          ,               , |

What patterns do you see?  We're looking at something cycling radicals, but not quite in natural order, because 3n is permuting every step and hopping the cursor.

These are clearly not random binary numbers, they tend to contain long runs and sparse sequences. Which is weird, because that suggests inefficient encoding, and if this thing it's anything, it's efficient. Look at this grouping pattern. I believe the multiplicity of 0s and 1s in a run is significant. It reminds me of the way Minsky encodes carries as long runs of repeating sequences feeding back. This may not be one symbolic word, but a self-delimiting series of subsymbols of some kind.

Note something: the symbol shows a triangle pattern of things being shifted away step by step. A big one (base 5 wide) starts at distance 18.
Corresponding to this, in the base3 symbol, exactly one line after the base of the binary triangle, an upside down one of O characters (ternary digit 2) forms and builds.

Note also base3 at distance 19 is alternating like |O-O-O, before a triangle starts forming. Distance 12 |-O-O-O is a similar pattern, again at the tip of a triangle. 

Bursts of | appear periodically and immediately disperse. These are digit 1 in ternary. 

The ternary triangle also ends one line after the binary one. It looks like something is being pushed from binary to ternary.

Which is exactly the opposite of how this seems to work, which is information flowing from the odd primes to the dyadic hierarchy then slowly destroyed. 

Can you explain this?



Remember both 0 and 1 have meaning, they are just symbols now, not bits.

I note the sequences taper at both ends, it looks like n wanders into the wrong neighborhood and takes a while to find its way back out. 

Note short symbols 101 and 111 are at the start of the orbit, 011 is almost at the end of the orbit. 0100 and 0111 have a long way to go, but 1110, 0001, 1010 end the orbit.

These strings map 1:1 to integers and therefore odd core fingerprints. Be sensitive to correlations between *neighbor* valuations and payload bits.

What can you make of this?

















































